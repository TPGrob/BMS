#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BMS.WCF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
    using System.Runtime.Serialization;
    using System.ComponentModel;
	using System;
    using System.ServiceModel;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BMS")]
	public partial class BMSClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBierkroegen(Bierkroegen instance);
    partial void UpdateBierkroegen(Bierkroegen instance);
    partial void DeleteBierkroegen(Bierkroegen instance);
    partial void InsertBestellingen(Bestellingen instance);
    partial void UpdateBestellingen(Bestellingen instance);
    partial void DeleteBestellingen(Bestellingen instance);
    partial void InsertProducten_Bier(Producten_Bier instance);
    partial void UpdateProducten_Bier(Producten_Bier instance);
    partial void DeleteProducten_Bier(Producten_Bier instance);
    partial void InsertBestellingProtucten(BestellingProtucten instance);
    partial void UpdateBestellingProtucten(BestellingProtucten instance);
    partial void DeleteBestellingProtucten(BestellingProtucten instance);
    partial void InsertBierGistingen(BierGistingen instance);
    partial void UpdateBierGistingen(BierGistingen instance);
    partial void DeleteBierGistingen(BierGistingen instance);
    partial void InsertBierType(BierType instance);
    partial void UpdateBierType(BierType instance);
    partial void DeleteBierType(BierType instance);
    partial void InsertBrouwerijen(Brouwerijen instance);
    partial void UpdateBrouwerijen(Brouwerijen instance);
    partial void DeleteBrouwerijen(Brouwerijen instance);
    partial void InsertDagen(Dagen instance);
    partial void UpdateDagen(Dagen instance);
    partial void DeleteDagen(Dagen instance);
    partial void InsertOpdieneren(Opdieneren instance);
    partial void UpdateOpdieneren(Opdieneren instance);
    partial void DeleteOpdieneren(Opdieneren instance);
    partial void InsertProductBierkroeg(ProductBierkroeg instance);
    partial void UpdateProductBierkroeg(ProductBierkroeg instance);
    partial void DeleteProductBierkroeg(ProductBierkroeg instance);
    partial void InsertProductCategorieen(ProductCategorieen instance);
    partial void UpdateProductCategorieen(ProductCategorieen instance);
    partial void DeleteProductCategorieen(ProductCategorieen instance);
    partial void InsertProducten(Producten instance);
    partial void UpdateProducten(Producten instance);
    partial void DeleteProducten(Producten instance);
    #endregion
		
		public BMSClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BMSClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BMSClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BMSClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BMSClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bierkroegen> Bierkroegens
		{
			get
			{
				return this.GetTable<Bierkroegen>();
			}
		}
		
		public System.Data.Linq.Table<Bestellingen> Bestellingens
		{
			get
			{
				return this.GetTable<Bestellingen>();
			}
		}
		
		public System.Data.Linq.Table<Producten_Bier> Producten_Biers
		{
			get
			{
				return this.GetTable<Producten_Bier>();
			}
		}
		
		public System.Data.Linq.Table<BestellingProtucten> BestellingProtuctens
		{
			get
			{
				return this.GetTable<BestellingProtucten>();
			}
		}
		
		public System.Data.Linq.Table<BierGistingen> BierGistingens
		{
			get
			{
				return this.GetTable<BierGistingen>();
			}
		}
		
		public System.Data.Linq.Table<BierType> BierTypes
		{
			get
			{
				return this.GetTable<BierType>();
			}
		}
		
		public System.Data.Linq.Table<Brouwerijen> Brouwerijens
		{
			get
			{
				return this.GetTable<Brouwerijen>();
			}
		}
		
		public System.Data.Linq.Table<Dagen> Dagens
		{
			get
			{
				return this.GetTable<Dagen>();
			}
		}
		
		public System.Data.Linq.Table<Opdieneren> Opdienerens
		{
			get
			{
				return this.GetTable<Opdieneren>();
			}
		}
		
		public System.Data.Linq.Table<ProductBierkroeg> ProductBierkroegs
		{
			get
			{
				return this.GetTable<ProductBierkroeg>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategorieen> ProductCategorieens
		{
			get
			{
				return this.GetTable<ProductCategorieen>();
			}
		}
		
		public System.Data.Linq.Table<Producten> Productens
		{
			get
			{
				return this.GetTable<Producten>();
			}
		}
	}
    [DataContract]
    [global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bierkroegen")]
	public partial class Bierkroegen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private EntitySet<Dagen> _Dagens;
		
		private EntitySet<Opdieneren> _Opdienerens;
		
		private EntitySet<ProductBierkroeg> _ProductBierkroegs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
		
		public Bierkroegen()
		{
			this._Dagens = new EntitySet<Dagen>(new Action<Dagen>(this.attach_Dagens), new Action<Dagen>(this.detach_Dagens));
			this._Opdienerens = new EntitySet<Opdieneren>(new Action<Opdieneren>(this.attach_Opdienerens), new Action<Opdieneren>(this.detach_Opdienerens));
			this._ProductBierkroegs = new EntitySet<ProductBierkroeg>(new Action<ProductBierkroeg>(this.attach_ProductBierkroegs), new Action<ProductBierkroeg>(this.detach_ProductBierkroegs));
			OnCreated();
		}
		[DataMember]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
        [DataMember]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
        [DataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bierkroegen_Dagen", Storage="_Dagens", ThisKey="Id", OtherKey="BierkroegId")]
		public EntitySet<Dagen> Dagens
		{
			get
			{
				return this._Dagens;
			}
			set
			{
				this._Dagens.Assign(value);
			}
		}
        [DataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bierkroegen_Opdieneren", Storage="_Opdienerens", ThisKey="Id", OtherKey="BierkroegId")]
		public EntitySet<Opdieneren> Opdienerens
		{
			get
			{
				return this._Opdienerens;
			}
			set
			{
				this._Opdienerens.Assign(value);
			}
		}
        [DataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bierkroegen_ProductBierkroeg", Storage="_ProductBierkroegs", ThisKey="Id", OtherKey="Bierkroegen_Id")]
		public EntitySet<ProductBierkroeg> ProductBierkroegs
		{
			get
			{
				return this._ProductBierkroegs;
			}
			set
			{
				this._ProductBierkroegs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dagens(Dagen entity)
		{
			this.SendPropertyChanging();
			entity.Bierkroegen = this;
		}
		
		private void detach_Dagens(Dagen entity)
		{
			this.SendPropertyChanging();
			entity.Bierkroegen = null;
		}
		
		private void attach_Opdienerens(Opdieneren entity)
		{
			this.SendPropertyChanging();
			entity.Bierkroegen = this;
		}
		
		private void detach_Opdienerens(Opdieneren entity)
		{
			this.SendPropertyChanging();
			entity.Bierkroegen = null;
		}
		
		private void attach_ProductBierkroegs(ProductBierkroeg entity)
		{
			this.SendPropertyChanging();
			entity.Bierkroegen = this;
		}
		
		private void detach_ProductBierkroegs(ProductBierkroeg entity)
		{
			this.SendPropertyChanging();
			entity.Bierkroegen = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bestellingen")]
	public partial class Bestellingen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Tafel;
		
		private decimal _Totaal;
		
		private bool _IsBezorcht;
		
		private System.Nullable<System.DateTime> _IsBezorchtTS;
		
		private bool _IsKlaarKeuken;
		
		private System.Nullable<System.DateTime> _IsKlaarKeukenTS;
		
		private bool _IsPrinted;
		
		private string _TS;
		
		private int _OpdienerId;
		
		private int _DagId;
		
		private EntitySet<BestellingProtucten> _BestellingProtuctens;
		
		private EntityRef<Dagen> _Dagen;
		
		private EntityRef<Opdieneren> _Opdieneren;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTafelChanging(string value);
    partial void OnTafelChanged();
    partial void OnTotaalChanging(decimal value);
    partial void OnTotaalChanged();
    partial void OnIsBezorchtChanging(bool value);
    partial void OnIsBezorchtChanged();
    partial void OnIsBezorchtTSChanging(System.Nullable<System.DateTime> value);
    partial void OnIsBezorchtTSChanged();
    partial void OnIsKlaarKeukenChanging(bool value);
    partial void OnIsKlaarKeukenChanged();
    partial void OnIsKlaarKeukenTSChanging(System.Nullable<System.DateTime> value);
    partial void OnIsKlaarKeukenTSChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnTSChanging(string value);
    partial void OnTSChanged();
    partial void OnOpdienerIdChanging(int value);
    partial void OnOpdienerIdChanged();
    partial void OnDagIdChanging(int value);
    partial void OnDagIdChanged();
    #endregion
		
		public Bestellingen()
		{
			this._BestellingProtuctens = new EntitySet<BestellingProtucten>(new Action<BestellingProtucten>(this.attach_BestellingProtuctens), new Action<BestellingProtucten>(this.detach_BestellingProtuctens));
			this._Dagen = default(EntityRef<Dagen>);
			this._Opdieneren = default(EntityRef<Opdieneren>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tafel", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Tafel
		{
			get
			{
				return this._Tafel;
			}
			set
			{
				if ((this._Tafel != value))
				{
					this.OnTafelChanging(value);
					this.SendPropertyChanging();
					this._Tafel = value;
					this.SendPropertyChanged("Tafel");
					this.OnTafelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Totaal", DbType="Decimal(18,0) NOT NULL")]
		public decimal Totaal
		{
			get
			{
				return this._Totaal;
			}
			set
			{
				if ((this._Totaal != value))
				{
					this.OnTotaalChanging(value);
					this.SendPropertyChanging();
					this._Totaal = value;
					this.SendPropertyChanged("Totaal");
					this.OnTotaalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBezorcht", DbType="Bit NOT NULL")]
		public bool IsBezorcht
		{
			get
			{
				return this._IsBezorcht;
			}
			set
			{
				if ((this._IsBezorcht != value))
				{
					this.OnIsBezorchtChanging(value);
					this.SendPropertyChanging();
					this._IsBezorcht = value;
					this.SendPropertyChanged("IsBezorcht");
					this.OnIsBezorchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBezorchtTS", DbType="DateTime")]
		public System.Nullable<System.DateTime> IsBezorchtTS
		{
			get
			{
				return this._IsBezorchtTS;
			}
			set
			{
				if ((this._IsBezorchtTS != value))
				{
					this.OnIsBezorchtTSChanging(value);
					this.SendPropertyChanging();
					this._IsBezorchtTS = value;
					this.SendPropertyChanged("IsBezorchtTS");
					this.OnIsBezorchtTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKlaarKeuken", DbType="Bit NOT NULL")]
		public bool IsKlaarKeuken
		{
			get
			{
				return this._IsKlaarKeuken;
			}
			set
			{
				if ((this._IsKlaarKeuken != value))
				{
					this.OnIsKlaarKeukenChanging(value);
					this.SendPropertyChanging();
					this._IsKlaarKeuken = value;
					this.SendPropertyChanged("IsKlaarKeuken");
					this.OnIsKlaarKeukenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKlaarKeukenTS", DbType="DateTime")]
		public System.Nullable<System.DateTime> IsKlaarKeukenTS
		{
			get
			{
				return this._IsKlaarKeukenTS;
			}
			set
			{
				if ((this._IsKlaarKeukenTS != value))
				{
					this.OnIsKlaarKeukenTSChanging(value);
					this.SendPropertyChanging();
					this._IsKlaarKeukenTS = value;
					this.SendPropertyChanged("IsKlaarKeukenTS");
					this.OnIsKlaarKeukenTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="NVarChar(MAX)")]
		public string TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpdienerId", DbType="Int NOT NULL")]
		public int OpdienerId
		{
			get
			{
				return this._OpdienerId;
			}
			set
			{
				if ((this._OpdienerId != value))
				{
					if (this._Opdieneren.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpdienerIdChanging(value);
					this.SendPropertyChanging();
					this._OpdienerId = value;
					this.SendPropertyChanged("OpdienerId");
					this.OnOpdienerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DagId", DbType="Int NOT NULL")]
		public int DagId
		{
			get
			{
				return this._DagId;
			}
			set
			{
				if ((this._DagId != value))
				{
					if (this._Dagen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDagIdChanging(value);
					this.SendPropertyChanging();
					this._DagId = value;
					this.SendPropertyChanged("DagId");
					this.OnDagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestellingen_BestellingProtucten", Storage="_BestellingProtuctens", ThisKey="Id", OtherKey="BestellingId")]
		public EntitySet<BestellingProtucten> BestellingProtuctens
		{
			get
			{
				return this._BestellingProtuctens;
			}
			set
			{
				this._BestellingProtuctens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dagen_Bestellingen", Storage="_Dagen", ThisKey="DagId", OtherKey="Id", IsForeignKey=true)]
		public Dagen Dagen
		{
			get
			{
				return this._Dagen.Entity;
			}
			set
			{
				Dagen previousValue = this._Dagen.Entity;
				if (((previousValue != value) 
							|| (this._Dagen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dagen.Entity = null;
						previousValue.Bestellingens.Remove(this);
					}
					this._Dagen.Entity = value;
					if ((value != null))
					{
						value.Bestellingens.Add(this);
						this._DagId = value.Id;
					}
					else
					{
						this._DagId = default(int);
					}
					this.SendPropertyChanged("Dagen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdieneren_Bestellingen", Storage="_Opdieneren", ThisKey="OpdienerId", OtherKey="Id", IsForeignKey=true)]
		public Opdieneren Opdieneren
		{
			get
			{
				return this._Opdieneren.Entity;
			}
			set
			{
				Opdieneren previousValue = this._Opdieneren.Entity;
				if (((previousValue != value) 
							|| (this._Opdieneren.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opdieneren.Entity = null;
						previousValue.Bestellingens.Remove(this);
					}
					this._Opdieneren.Entity = value;
					if ((value != null))
					{
						value.Bestellingens.Add(this);
						this._OpdienerId = value.Id;
					}
					else
					{
						this._OpdienerId = default(int);
					}
					this.SendPropertyChanged("Opdieneren");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BestellingProtuctens(BestellingProtucten entity)
		{
			this.SendPropertyChanging();
			entity.Bestellingen = this;
		}
		
		private void detach_BestellingProtuctens(BestellingProtucten entity)
		{
			this.SendPropertyChanging();
			entity.Bestellingen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producten_Bier")]
	public partial class Producten_Bier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Alcohol;
		
		private decimal _Inhoud;
		
		private int _Aantal;
		
		private int _BierTypeId;
		
		private int _BierGistingId;
		
		private int _BrouwerijId;
		
		private int _Id;
		
		private EntityRef<BierGistingen> _BierGistingen;
		
		private EntityRef<BierType> _BierType;
		
		private EntityRef<Brouwerijen> _Brouwerijen;
		
		private EntityRef<Producten> _Producten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlcoholChanging(decimal value);
    partial void OnAlcoholChanged();
    partial void OnInhoudChanging(decimal value);
    partial void OnInhoudChanged();
    partial void OnAantalChanging(int value);
    partial void OnAantalChanged();
    partial void OnBierTypeIdChanging(int value);
    partial void OnBierTypeIdChanged();
    partial void OnBierGistingIdChanging(int value);
    partial void OnBierGistingIdChanged();
    partial void OnBrouwerijIdChanging(int value);
    partial void OnBrouwerijIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public Producten_Bier()
		{
			this._BierGistingen = default(EntityRef<BierGistingen>);
			this._BierType = default(EntityRef<BierType>);
			this._Brouwerijen = default(EntityRef<Brouwerijen>);
			this._Producten = default(EntityRef<Producten>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alcohol", DbType="Decimal(10,2) NOT NULL")]
		public decimal Alcohol
		{
			get
			{
				return this._Alcohol;
			}
			set
			{
				if ((this._Alcohol != value))
				{
					this.OnAlcoholChanging(value);
					this.SendPropertyChanging();
					this._Alcohol = value;
					this.SendPropertyChanged("Alcohol");
					this.OnAlcoholChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inhoud", DbType="Decimal(10,2) NOT NULL")]
		public decimal Inhoud
		{
			get
			{
				return this._Inhoud;
			}
			set
			{
				if ((this._Inhoud != value))
				{
					this.OnInhoudChanging(value);
					this.SendPropertyChanging();
					this._Inhoud = value;
					this.SendPropertyChanged("Inhoud");
					this.OnInhoudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aantal", DbType="Int NOT NULL")]
		public int Aantal
		{
			get
			{
				return this._Aantal;
			}
			set
			{
				if ((this._Aantal != value))
				{
					this.OnAantalChanging(value);
					this.SendPropertyChanging();
					this._Aantal = value;
					this.SendPropertyChanged("Aantal");
					this.OnAantalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BierTypeId", DbType="Int NOT NULL")]
		public int BierTypeId
		{
			get
			{
				return this._BierTypeId;
			}
			set
			{
				if ((this._BierTypeId != value))
				{
					if (this._BierType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBierTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BierTypeId = value;
					this.SendPropertyChanged("BierTypeId");
					this.OnBierTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BierGistingId", DbType="Int NOT NULL")]
		public int BierGistingId
		{
			get
			{
				return this._BierGistingId;
			}
			set
			{
				if ((this._BierGistingId != value))
				{
					if (this._BierGistingen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBierGistingIdChanging(value);
					this.SendPropertyChanging();
					this._BierGistingId = value;
					this.SendPropertyChanged("BierGistingId");
					this.OnBierGistingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrouwerijId", DbType="Int NOT NULL")]
		public int BrouwerijId
		{
			get
			{
				return this._BrouwerijId;
			}
			set
			{
				if ((this._BrouwerijId != value))
				{
					if (this._Brouwerijen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrouwerijIdChanging(value);
					this.SendPropertyChanging();
					this._BrouwerijId = value;
					this.SendPropertyChanged("BrouwerijId");
					this.OnBrouwerijIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Producten.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BierGistingen_Producten_Bier", Storage="_BierGistingen", ThisKey="BierGistingId", OtherKey="Id", IsForeignKey=true)]
		public BierGistingen BierGistingen
		{
			get
			{
				return this._BierGistingen.Entity;
			}
			set
			{
				BierGistingen previousValue = this._BierGistingen.Entity;
				if (((previousValue != value) 
							|| (this._BierGistingen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BierGistingen.Entity = null;
						previousValue.Producten_Biers.Remove(this);
					}
					this._BierGistingen.Entity = value;
					if ((value != null))
					{
						value.Producten_Biers.Add(this);
						this._BierGistingId = value.Id;
					}
					else
					{
						this._BierGistingId = default(int);
					}
					this.SendPropertyChanged("BierGistingen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BierType_Producten_Bier", Storage="_BierType", ThisKey="BierTypeId", OtherKey="Id", IsForeignKey=true)]
		public BierType BierType
		{
			get
			{
				return this._BierType.Entity;
			}
			set
			{
				BierType previousValue = this._BierType.Entity;
				if (((previousValue != value) 
							|| (this._BierType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BierType.Entity = null;
						previousValue.Producten_Biers.Remove(this);
					}
					this._BierType.Entity = value;
					if ((value != null))
					{
						value.Producten_Biers.Add(this);
						this._BierTypeId = value.Id;
					}
					else
					{
						this._BierTypeId = default(int);
					}
					this.SendPropertyChanged("BierType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brouwerijen_Producten_Bier", Storage="_Brouwerijen", ThisKey="BrouwerijId", OtherKey="Id", IsForeignKey=true)]
		public Brouwerijen Brouwerijen
		{
			get
			{
				return this._Brouwerijen.Entity;
			}
			set
			{
				Brouwerijen previousValue = this._Brouwerijen.Entity;
				if (((previousValue != value) 
							|| (this._Brouwerijen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brouwerijen.Entity = null;
						previousValue.Producten_Biers.Remove(this);
					}
					this._Brouwerijen.Entity = value;
					if ((value != null))
					{
						value.Producten_Biers.Add(this);
						this._BrouwerijId = value.Id;
					}
					else
					{
						this._BrouwerijId = default(int);
					}
					this.SendPropertyChanged("Brouwerijen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producten_Producten_Bier", Storage="_Producten", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Producten Producten
		{
			get
			{
				return this._Producten.Entity;
			}
			set
			{
				Producten previousValue = this._Producten.Entity;
				if (((previousValue != value) 
							|| (this._Producten.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producten.Entity = null;
						previousValue.Producten_Bier = null;
					}
					this._Producten.Entity = value;
					if ((value != null))
					{
						value.Producten_Bier = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Producten");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BestellingProtucten")]
	public partial class BestellingProtucten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private short _Aantal;
		
		private string _Totaal;
		
		private int _BestellingId;
		
		private int _ProductId;
		
		private EntityRef<Bestellingen> _Bestellingen;
		
		private EntityRef<Producten> _Producten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAantalChanging(short value);
    partial void OnAantalChanged();
    partial void OnTotaalChanging(string value);
    partial void OnTotaalChanged();
    partial void OnBestellingIdChanging(int value);
    partial void OnBestellingIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    #endregion
		
		public BestellingProtucten()
		{
			this._Bestellingen = default(EntityRef<Bestellingen>);
			this._Producten = default(EntityRef<Producten>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aantal", DbType="SmallInt NOT NULL")]
		public short Aantal
		{
			get
			{
				return this._Aantal;
			}
			set
			{
				if ((this._Aantal != value))
				{
					this.OnAantalChanging(value);
					this.SendPropertyChanging();
					this._Aantal = value;
					this.SendPropertyChanged("Aantal");
					this.OnAantalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Totaal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Totaal
		{
			get
			{
				return this._Totaal;
			}
			set
			{
				if ((this._Totaal != value))
				{
					this.OnTotaalChanging(value);
					this.SendPropertyChanging();
					this._Totaal = value;
					this.SendPropertyChanged("Totaal");
					this.OnTotaalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BestellingId", DbType="Int NOT NULL")]
		public int BestellingId
		{
			get
			{
				return this._BestellingId;
			}
			set
			{
				if ((this._BestellingId != value))
				{
					if (this._Bestellingen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBestellingIdChanging(value);
					this.SendPropertyChanging();
					this._BestellingId = value;
					this.SendPropertyChanged("BestellingId");
					this.OnBestellingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Producten.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestellingen_BestellingProtucten", Storage="_Bestellingen", ThisKey="BestellingId", OtherKey="Id", IsForeignKey=true)]
		public Bestellingen Bestellingen
		{
			get
			{
				return this._Bestellingen.Entity;
			}
			set
			{
				Bestellingen previousValue = this._Bestellingen.Entity;
				if (((previousValue != value) 
							|| (this._Bestellingen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bestellingen.Entity = null;
						previousValue.BestellingProtuctens.Remove(this);
					}
					this._Bestellingen.Entity = value;
					if ((value != null))
					{
						value.BestellingProtuctens.Add(this);
						this._BestellingId = value.Id;
					}
					else
					{
						this._BestellingId = default(int);
					}
					this.SendPropertyChanged("Bestellingen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producten_BestellingProtucten", Storage="_Producten", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Producten Producten
		{
			get
			{
				return this._Producten.Entity;
			}
			set
			{
				Producten previousValue = this._Producten.Entity;
				if (((previousValue != value) 
							|| (this._Producten.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producten.Entity = null;
						previousValue.BestellingProtuctens.Remove(this);
					}
					this._Producten.Entity = value;
					if ((value != null))
					{
						value.BestellingProtuctens.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Producten");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BierGistingen")]
	public partial class BierGistingen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Gisting;
		
		private EntitySet<Producten_Bier> _Producten_Biers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGistingChanging(string value);
    partial void OnGistingChanged();
    #endregion
		
		public BierGistingen()
		{
			this._Producten_Biers = new EntitySet<Producten_Bier>(new Action<Producten_Bier>(this.attach_Producten_Biers), new Action<Producten_Bier>(this.detach_Producten_Biers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gisting", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Gisting
		{
			get
			{
				return this._Gisting;
			}
			set
			{
				if ((this._Gisting != value))
				{
					this.OnGistingChanging(value);
					this.SendPropertyChanging();
					this._Gisting = value;
					this.SendPropertyChanged("Gisting");
					this.OnGistingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BierGistingen_Producten_Bier", Storage="_Producten_Biers", ThisKey="Id", OtherKey="BierGistingId")]
		public EntitySet<Producten_Bier> Producten_Biers
		{
			get
			{
				return this._Producten_Biers;
			}
			set
			{
				this._Producten_Biers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producten_Biers(Producten_Bier entity)
		{
			this.SendPropertyChanging();
			entity.BierGistingen = this;
		}
		
		private void detach_Producten_Biers(Producten_Bier entity)
		{
			this.SendPropertyChanging();
			entity.BierGistingen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BierTypes")]
	public partial class BierType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private EntitySet<Producten_Bier> _Producten_Biers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public BierType()
		{
			this._Producten_Biers = new EntitySet<Producten_Bier>(new Action<Producten_Bier>(this.attach_Producten_Biers), new Action<Producten_Bier>(this.detach_Producten_Biers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BierType_Producten_Bier", Storage="_Producten_Biers", ThisKey="Id", OtherKey="BierTypeId")]
		public EntitySet<Producten_Bier> Producten_Biers
		{
			get
			{
				return this._Producten_Biers;
			}
			set
			{
				this._Producten_Biers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producten_Biers(Producten_Bier entity)
		{
			this.SendPropertyChanging();
			entity.BierType = this;
		}
		
		private void detach_Producten_Biers(Producten_Bier entity)
		{
			this.SendPropertyChanging();
			entity.BierType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brouwerijen")]
	public partial class Brouwerijen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private string _Locatie;
		
		private string _Beschrijving;
		
		private EntitySet<Producten_Bier> _Producten_Biers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnLocatieChanging(string value);
    partial void OnLocatieChanged();
    partial void OnBeschrijvingChanging(string value);
    partial void OnBeschrijvingChanged();
    #endregion
		
		public Brouwerijen()
		{
			this._Producten_Biers = new EntitySet<Producten_Bier>(new Action<Producten_Bier>(this.attach_Producten_Biers), new Action<Producten_Bier>(this.detach_Producten_Biers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locatie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Locatie
		{
			get
			{
				return this._Locatie;
			}
			set
			{
				if ((this._Locatie != value))
				{
					this.OnLocatieChanging(value);
					this.SendPropertyChanging();
					this._Locatie = value;
					this.SendPropertyChanged("Locatie");
					this.OnLocatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschrijving", DbType="NVarChar(MAX)")]
		public string Beschrijving
		{
			get
			{
				return this._Beschrijving;
			}
			set
			{
				if ((this._Beschrijving != value))
				{
					this.OnBeschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Beschrijving = value;
					this.SendPropertyChanged("Beschrijving");
					this.OnBeschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brouwerijen_Producten_Bier", Storage="_Producten_Biers", ThisKey="Id", OtherKey="BrouwerijId")]
		public EntitySet<Producten_Bier> Producten_Biers
		{
			get
			{
				return this._Producten_Biers;
			}
			set
			{
				this._Producten_Biers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producten_Biers(Producten_Bier entity)
		{
			this.SendPropertyChanging();
			entity.Brouwerijen = this;
		}
		
		private void detach_Producten_Biers(Producten_Bier entity)
		{
			this.SendPropertyChanging();
			entity.Brouwerijen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dagen")]
	public partial class Dagen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private string _TS;
		
		private int _BierkroegId;
		
		private EntitySet<Bestellingen> _Bestellingens;
		
		private EntityRef<Bierkroegen> _Bierkroegen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnTSChanging(string value);
    partial void OnTSChanged();
    partial void OnBierkroegIdChanging(int value);
    partial void OnBierkroegIdChanged();
    #endregion
		
		public Dagen()
		{
			this._Bestellingens = new EntitySet<Bestellingen>(new Action<Bestellingen>(this.attach_Bestellingens), new Action<Bestellingen>(this.detach_Bestellingens));
			this._Bierkroegen = default(EntityRef<Bierkroegen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="NVarChar(MAX)")]
		public string TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BierkroegId", DbType="Int NOT NULL")]
		public int BierkroegId
		{
			get
			{
				return this._BierkroegId;
			}
			set
			{
				if ((this._BierkroegId != value))
				{
					if (this._Bierkroegen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBierkroegIdChanging(value);
					this.SendPropertyChanging();
					this._BierkroegId = value;
					this.SendPropertyChanged("BierkroegId");
					this.OnBierkroegIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dagen_Bestellingen", Storage="_Bestellingens", ThisKey="Id", OtherKey="DagId")]
		public EntitySet<Bestellingen> Bestellingens
		{
			get
			{
				return this._Bestellingens;
			}
			set
			{
				this._Bestellingens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bierkroegen_Dagen", Storage="_Bierkroegen", ThisKey="BierkroegId", OtherKey="Id", IsForeignKey=true)]
		public Bierkroegen Bierkroegen
		{
			get
			{
				return this._Bierkroegen.Entity;
			}
			set
			{
				Bierkroegen previousValue = this._Bierkroegen.Entity;
				if (((previousValue != value) 
							|| (this._Bierkroegen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bierkroegen.Entity = null;
						previousValue.Dagens.Remove(this);
					}
					this._Bierkroegen.Entity = value;
					if ((value != null))
					{
						value.Dagens.Add(this);
						this._BierkroegId = value.Id;
					}
					else
					{
						this._BierkroegId = default(int);
					}
					this.SendPropertyChanged("Bierkroegen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bestellingens(Bestellingen entity)
		{
			this.SendPropertyChanging();
			entity.Dagen = this;
		}
		
		private void detach_Bestellingens(Bestellingen entity)
		{
			this.SendPropertyChanging();
			entity.Dagen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Opdieneren")]
	public partial class Opdieneren : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private string _TS;
		
		private int _BierkroegId;
		
		private EntitySet<Bestellingen> _Bestellingens;
		
		private EntityRef<Bierkroegen> _Bierkroegen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnTSChanging(string value);
    partial void OnTSChanged();
    partial void OnBierkroegIdChanging(int value);
    partial void OnBierkroegIdChanged();
    #endregion
		
		public Opdieneren()
		{
			this._Bestellingens = new EntitySet<Bestellingen>(new Action<Bestellingen>(this.attach_Bestellingens), new Action<Bestellingen>(this.detach_Bestellingens));
			this._Bierkroegen = default(EntityRef<Bierkroegen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="NVarChar(MAX)")]
		public string TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BierkroegId", DbType="Int NOT NULL")]
		public int BierkroegId
		{
			get
			{
				return this._BierkroegId;
			}
			set
			{
				if ((this._BierkroegId != value))
				{
					if (this._Bierkroegen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBierkroegIdChanging(value);
					this.SendPropertyChanging();
					this._BierkroegId = value;
					this.SendPropertyChanged("BierkroegId");
					this.OnBierkroegIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdieneren_Bestellingen", Storage="_Bestellingens", ThisKey="Id", OtherKey="OpdienerId")]
		public EntitySet<Bestellingen> Bestellingens
		{
			get
			{
				return this._Bestellingens;
			}
			set
			{
				this._Bestellingens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bierkroegen_Opdieneren", Storage="_Bierkroegen", ThisKey="BierkroegId", OtherKey="Id", IsForeignKey=true)]
		public Bierkroegen Bierkroegen
		{
			get
			{
				return this._Bierkroegen.Entity;
			}
			set
			{
				Bierkroegen previousValue = this._Bierkroegen.Entity;
				if (((previousValue != value) 
							|| (this._Bierkroegen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bierkroegen.Entity = null;
						previousValue.Opdienerens.Remove(this);
					}
					this._Bierkroegen.Entity = value;
					if ((value != null))
					{
						value.Opdienerens.Add(this);
						this._BierkroegId = value.Id;
					}
					else
					{
						this._BierkroegId = default(int);
					}
					this.SendPropertyChanged("Bierkroegen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bestellingens(Bestellingen entity)
		{
			this.SendPropertyChanging();
			entity.Opdieneren = this;
		}
		
		private void detach_Bestellingens(Bestellingen entity)
		{
			this.SendPropertyChanging();
			entity.Opdieneren = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductBierkroeg")]
	public partial class ProductBierkroeg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Producten_Id;
		
		private int _Bierkroegen_Id;
		
		private EntityRef<Bierkroegen> _Bierkroegen;
		
		private EntityRef<Producten> _Producten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProducten_IdChanging(int value);
    partial void OnProducten_IdChanged();
    partial void OnBierkroegen_IdChanging(int value);
    partial void OnBierkroegen_IdChanged();
    #endregion
		
		public ProductBierkroeg()
		{
			this._Bierkroegen = default(EntityRef<Bierkroegen>);
			this._Producten = default(EntityRef<Producten>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producten_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Producten_Id
		{
			get
			{
				return this._Producten_Id;
			}
			set
			{
				if ((this._Producten_Id != value))
				{
					if (this._Producten.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducten_IdChanging(value);
					this.SendPropertyChanging();
					this._Producten_Id = value;
					this.SendPropertyChanged("Producten_Id");
					this.OnProducten_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bierkroegen_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bierkroegen_Id
		{
			get
			{
				return this._Bierkroegen_Id;
			}
			set
			{
				if ((this._Bierkroegen_Id != value))
				{
					if (this._Bierkroegen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBierkroegen_IdChanging(value);
					this.SendPropertyChanging();
					this._Bierkroegen_Id = value;
					this.SendPropertyChanged("Bierkroegen_Id");
					this.OnBierkroegen_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bierkroegen_ProductBierkroeg", Storage="_Bierkroegen", ThisKey="Bierkroegen_Id", OtherKey="Id", IsForeignKey=true)]
		public Bierkroegen Bierkroegen
		{
			get
			{
				return this._Bierkroegen.Entity;
			}
			set
			{
				Bierkroegen previousValue = this._Bierkroegen.Entity;
				if (((previousValue != value) 
							|| (this._Bierkroegen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bierkroegen.Entity = null;
						previousValue.ProductBierkroegs.Remove(this);
					}
					this._Bierkroegen.Entity = value;
					if ((value != null))
					{
						value.ProductBierkroegs.Add(this);
						this._Bierkroegen_Id = value.Id;
					}
					else
					{
						this._Bierkroegen_Id = default(int);
					}
					this.SendPropertyChanged("Bierkroegen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producten_ProductBierkroeg", Storage="_Producten", ThisKey="Producten_Id", OtherKey="Id", IsForeignKey=true)]
		public Producten Producten
		{
			get
			{
				return this._Producten.Entity;
			}
			set
			{
				Producten previousValue = this._Producten.Entity;
				if (((previousValue != value) 
							|| (this._Producten.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producten.Entity = null;
						previousValue.ProductBierkroegs.Remove(this);
					}
					this._Producten.Entity = value;
					if ((value != null))
					{
						value.ProductBierkroegs.Add(this);
						this._Producten_Id = value.Id;
					}
					else
					{
						this._Producten_Id = default(int);
					}
					this.SendPropertyChanged("Producten");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategorieen")]
	public partial class ProductCategorieen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private bool _Isbier;
		
		private EntitySet<Producten> _Productens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnIsbierChanging(bool value);
    partial void OnIsbierChanged();
    #endregion
		
		public ProductCategorieen()
		{
			this._Productens = new EntitySet<Producten>(new Action<Producten>(this.attach_Productens), new Action<Producten>(this.detach_Productens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isbier", DbType="Bit NOT NULL")]
		public bool Isbier
		{
			get
			{
				return this._Isbier;
			}
			set
			{
				if ((this._Isbier != value))
				{
					this.OnIsbierChanging(value);
					this.SendPropertyChanging();
					this._Isbier = value;
					this.SendPropertyChanged("Isbier");
					this.OnIsbierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategorieen_Producten", Storage="_Productens", ThisKey="Id", OtherKey="ProductCategorieId")]
		public EntitySet<Producten> Productens
		{
			get
			{
				return this._Productens;
			}
			set
			{
				this._Productens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productens(Producten entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategorieen = this;
		}
		
		private void detach_Productens(Producten entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategorieen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producten")]
	public partial class Producten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProductNaam;
		
		private decimal _Prijs;
		
		private string _Beschrijving;
		
		private bool _InVoorraad;
		
		private System.Data.Linq.Binary _IMG;
		
		private int _ProductCategorieId;
		
		private EntityRef<Producten_Bier> _Producten_Bier;
		
		private EntitySet<BestellingProtucten> _BestellingProtuctens;
		
		private EntitySet<ProductBierkroeg> _ProductBierkroegs;
		
		private EntityRef<ProductCategorieen> _ProductCategorieen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductNaamChanging(string value);
    partial void OnProductNaamChanged();
    partial void OnPrijsChanging(decimal value);
    partial void OnPrijsChanged();
    partial void OnBeschrijvingChanging(string value);
    partial void OnBeschrijvingChanged();
    partial void OnInVoorraadChanging(bool value);
    partial void OnInVoorraadChanged();
    partial void OnIMGChanging(System.Data.Linq.Binary value);
    partial void OnIMGChanged();
    partial void OnProductCategorieIdChanging(int value);
    partial void OnProductCategorieIdChanged();
    #endregion
		
		public Producten()
		{
			this._Producten_Bier = default(EntityRef<Producten_Bier>);
			this._BestellingProtuctens = new EntitySet<BestellingProtucten>(new Action<BestellingProtucten>(this.attach_BestellingProtuctens), new Action<BestellingProtucten>(this.detach_BestellingProtuctens));
			this._ProductBierkroegs = new EntitySet<ProductBierkroeg>(new Action<ProductBierkroeg>(this.attach_ProductBierkroegs), new Action<ProductBierkroeg>(this.detach_ProductBierkroegs));
			this._ProductCategorieen = default(EntityRef<ProductCategorieen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductNaam
		{
			get
			{
				return this._ProductNaam;
			}
			set
			{
				if ((this._ProductNaam != value))
				{
					this.OnProductNaamChanging(value);
					this.SendPropertyChanging();
					this._ProductNaam = value;
					this.SendPropertyChanged("ProductNaam");
					this.OnProductNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prijs", DbType="Decimal(10,2) NOT NULL")]
		public decimal Prijs
		{
			get
			{
				return this._Prijs;
			}
			set
			{
				if ((this._Prijs != value))
				{
					this.OnPrijsChanging(value);
					this.SendPropertyChanging();
					this._Prijs = value;
					this.SendPropertyChanged("Prijs");
					this.OnPrijsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschrijving", DbType="NVarChar(MAX)")]
		public string Beschrijving
		{
			get
			{
				return this._Beschrijving;
			}
			set
			{
				if ((this._Beschrijving != value))
				{
					this.OnBeschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Beschrijving = value;
					this.SendPropertyChanged("Beschrijving");
					this.OnBeschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InVoorraad", DbType="Bit NOT NULL")]
		public bool InVoorraad
		{
			get
			{
				return this._InVoorraad;
			}
			set
			{
				if ((this._InVoorraad != value))
				{
					this.OnInVoorraadChanging(value);
					this.SendPropertyChanging();
					this._InVoorraad = value;
					this.SendPropertyChanged("InVoorraad");
					this.OnInVoorraadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary IMG
		{
			get
			{
				return this._IMG;
			}
			set
			{
				if ((this._IMG != value))
				{
					this.OnIMGChanging(value);
					this.SendPropertyChanging();
					this._IMG = value;
					this.SendPropertyChanged("IMG");
					this.OnIMGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategorieId", DbType="Int NOT NULL")]
		public int ProductCategorieId
		{
			get
			{
				return this._ProductCategorieId;
			}
			set
			{
				if ((this._ProductCategorieId != value))
				{
					if (this._ProductCategorieen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategorieIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCategorieId = value;
					this.SendPropertyChanged("ProductCategorieId");
					this.OnProductCategorieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producten_Producten_Bier", Storage="_Producten_Bier", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Producten_Bier Producten_Bier
		{
			get
			{
				return this._Producten_Bier.Entity;
			}
			set
			{
				Producten_Bier previousValue = this._Producten_Bier.Entity;
				if (((previousValue != value) 
							|| (this._Producten_Bier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producten_Bier.Entity = null;
						previousValue.Producten = null;
					}
					this._Producten_Bier.Entity = value;
					if ((value != null))
					{
						value.Producten = this;
					}
					this.SendPropertyChanged("Producten_Bier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producten_BestellingProtucten", Storage="_BestellingProtuctens", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<BestellingProtucten> BestellingProtuctens
		{
			get
			{
				return this._BestellingProtuctens;
			}
			set
			{
				this._BestellingProtuctens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producten_ProductBierkroeg", Storage="_ProductBierkroegs", ThisKey="Id", OtherKey="Producten_Id")]
		public EntitySet<ProductBierkroeg> ProductBierkroegs
		{
			get
			{
				return this._ProductBierkroegs;
			}
			set
			{
				this._ProductBierkroegs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategorieen_Producten", Storage="_ProductCategorieen", ThisKey="ProductCategorieId", OtherKey="Id", IsForeignKey=true)]
		public ProductCategorieen ProductCategorieen
		{
			get
			{
				return this._ProductCategorieen.Entity;
			}
			set
			{
				ProductCategorieen previousValue = this._ProductCategorieen.Entity;
				if (((previousValue != value) 
							|| (this._ProductCategorieen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCategorieen.Entity = null;
						previousValue.Productens.Remove(this);
					}
					this._ProductCategorieen.Entity = value;
					if ((value != null))
					{
						value.Productens.Add(this);
						this._ProductCategorieId = value.Id;
					}
					else
					{
						this._ProductCategorieId = default(int);
					}
					this.SendPropertyChanged("ProductCategorieen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BestellingProtuctens(BestellingProtucten entity)
		{
			this.SendPropertyChanging();
			entity.Producten = this;
		}
		
		private void detach_BestellingProtuctens(BestellingProtucten entity)
		{
			this.SendPropertyChanging();
			entity.Producten = null;
		}
		
		private void attach_ProductBierkroegs(ProductBierkroeg entity)
		{
			this.SendPropertyChanging();
			entity.Producten = this;
		}
		
		private void detach_ProductBierkroegs(ProductBierkroeg entity)
		{
			this.SendPropertyChanging();
			entity.Producten = null;
		}
	}
}
#pragma warning restore 1591
